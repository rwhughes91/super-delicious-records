@mixin arrow-rules($direction, $size) {
  width: 0;
  height: 0;
  border-top: $size solid transparent;
  border-bottom: $size * 0.866 solid transparent;
  transition: transform 0.2s;
  backface-visibility: hidden;

  @if $direction == left {
    border-right: $size solid var(--bright-red-color);
  } @else if $direction == down {
    border-top: $size solid var(--bright-red-color);
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  } @else {
    border-left: $size solid var(--bright-red-color);
  }
}

.ArrowLeft {
  &.XLarge {
    @include arrow-rules('left', 1.2rem);
  }
  &.Large {
    @include arrow-rules('left', 1rem);
  }
  &.Medium {
    @include arrow-rules('left', 0.9rem);
  }
  &.Small {
    @include arrow-rules('left', 0.6rem);
  }
}
.ArrowRight {
  &.XLarge {
    @include arrow-rules('right', 1.2rem);
  }
  &.Large {
    @include arrow-rules('right', 1rem);
  }
  &.Medium {
    @include arrow-rules('right', 0.9rem);
  }
  &.Small {
    @include arrow-rules('right', 0.6rem);
  }
}
.ArrowDown {
  &.XLarge {
    @include arrow-rules('down', 1.2rem);
  }
  &.Large {
    @include arrow-rules('down', 1rem);
  }
  &.Medium {
    @include arrow-rules('down', 0.9rem);
  }
  &.Small {
    @include arrow-rules('down', 0.6rem);
  }
}

@media (max-width: 56.25em) {
  .ArrowLeft {
    border-right: 1rem solid var(--bright-red-color);
  }
  .ArrowRight {
    border-left: 1rem solid var(--bright-red-color);
  }
  .ArrowDown {
    border-top: 1rem solid var(--bright-red-color);
  }
}
